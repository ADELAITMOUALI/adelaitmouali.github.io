<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Adel Mouali - Portfolio</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"></script>
    <style>
        body, html {
            margin: 0;
            padding: 0;
            font-family: 'Courier New', monospace;
            color: #ffffff;
            overflow: hidden;
        }
        #canvas {
            position: fixed;
            top: 0;
            left: 0;
            z-index: -1;
        }
        .container {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            max-width: 800px;
            padding: 20px;
            text-align: center;
            z-index: 1;
            background: rgba(0, 0, 0, 0.6);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            box-shadow: 0 4px 30px rgba(0, 0, 0, 0.7);
            /* position: relative;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            text-align: center;
            z-index: 1;
            background: rgba(0, 0, 0, 0.6); 
            backdrop-filter: blur(10px); 
            border-radius: 15px; 
            box-shadow: 0 4px 30px rgba(0, 0, 0, 0.7);  */
        }
        .profile-pic {
            width: 200px;
            height: 200px;
            border-radius: 50%;
            object-fit: cover;
            border: 4px solid #00ffff;
            box-shadow: 0 0 20px rgba(0, 255, 255, 0.5);
            transition: transform 0.3s ease;
        }
        .profile-pic:hover {
            transform: scale(1.05);
        }
        h1 {
            font-size: 2.5em;
            margin-top: 20px;
            color: #00ff00; /* Hacker-style text color */
            text-shadow: 0 0 10px rgba(0, 255, 0, 0.7); /* Text shadow */
        }
        .social-links {
            margin-top: 20px;
        }
        .social-links a {
            display: inline-block;
            color: #ffffff;
            text-decoration: none;
            margin: 0 10px;
            font-size: 1.2em;
            padding: 10px 20px;
            background-color: rgba(0, 0, 0, 0.5);
            border-radius: 20px;
            transition: background-color 0.3s ease;
        }
        .social-links a:hover {
            background-color: rgba(0, 255, 255, 0.2);
        }
        #tryhackme-badge {
            margin-top: 20px;
            padding: 20px;
            border-radius: 10px;
        }
    </style>
</head>
<body>
    <canvas id="canvas"></canvas>
    <div class="container">
        <img src="images/myimage.jpg" alt="Adel Mouali" class="profile-pic">
        <h1>Adel Mouali</h1>
        <div class="social-links">
            <a href="https://tryhackme.com/p/Adel.Mouali" target="_blank">TryHackMe</a>
            <a href="https://github.com/adelaitmouali" target="_blank">GitHub</a>
            <a href="https://www.linkedin.com/in/adel-ait-mouali-a07020237" target="_blank">LinkedIn</a>
        </div>
        <div id="tryhackme-badge">
            <script src="https://tryhackme.com/badge/1487925"></script>
        </div>
    </div>

    <script>
        // Three.js background effect
        const scene = new THREE.Scene();
        const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
        const renderer = new THREE.WebGLRenderer({ canvas: document.getElementById('canvas'), alpha: true });
        renderer.setSize(window.innerWidth, window.innerHeight);

        const geometry = new THREE.BufferGeometry();
        const vertices = [];
        const colors = [];
        for (let i = 0; i < 15000; i++) {
            vertices.push(THREE.MathUtils.randFloatSpread(2000));
            vertices.push(THREE.MathUtils.randFloatSpread(2000));
            vertices.push(THREE.MathUtils.randFloatSpread(2000));

            colors.push(Math.random(), Math.random(), Math.random());
        }
        geometry.setAttribute('position', new THREE.Float32BufferAttribute(vertices, 3));
        geometry.setAttribute('color', new THREE.Float32BufferAttribute(colors, 3));

        const particles = new THREE.Points(
            geometry,
            new THREE.PointsMaterial({ size: 3, vertexColors: true, blending: THREE.AdditiveBlending })
        );
        scene.add(particles);

        camera.position.z = 1000;

        function animate() {
            requestAnimationFrame(animate);
            particles.rotation.x += 0.0005;
            particles.rotation.y += 0.0005;
            renderer.render(scene, camera);
        }
        animate();

        window.addEventListener('resize', () => {
            camera.aspect = window.innerWidth / window.innerHeight;
            camera.updateProjectionMatrix();
            renderer.setSize(window.innerWidth, window.innerHeight);
        });
    </script>
</body>
</html>
